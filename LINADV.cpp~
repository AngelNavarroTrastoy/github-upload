//LINADV model algorithm for Numerical_Meteorology.
/*The algorithm is explained step by step acording to the cookbook shown in the documentation of the course. */

// <fstream> allows to create files and save the data on them.
#include <fstream>
#include <string>
#include <cmath>
#include <vector>
#include <iostream>

using namespace std;


int main() {

  /*Step 1: Set model parameters: idim, lambdax(m), lambdat(s), ubar(m/s)*/ 
  int idim = 99, lambdax = 10000, lambdat = 300, ubar = 10;

  /*Step 2: Initialize model variables: LINADV only has 'h'. Set a gaussian using the formula given in the documentation.*/

  int h0 = 10, sigma = 100000;
  vector<int> h;
  //ofstream Myfile("LINADVinit.txt");
    for (int i = 1; i <= idim ; i++){
      int j = h0*exp(-pow((i-49)*lambdax,2)/(2*pow(sigma,2)));
      h.push_back(j);
      /* string data1 = to_string(i);
      string data2 = to_string(j);
      Myfile << data1 + " " + data2 + "\n";*/
    }
    // Myfile.close();

  /*Step 3: Compute tendencies of state variables*/
  //Centered difference set directly to the heighttendency (htend in the documentation)

  //Create the new vectors
    vector<int> htend = h, hinit = h, hnew;
    //vector<int> hnew;

  for(int i = 1; i < 98 ; i++){
    htend[i] = -ubar*(h[i+1]-h[i-1]/(2*lambdax));
    int hn = h[i-1] + lambdat*htend[i-1];
    hnew.push_back(hn);
  }

  /*Step 4: Extrapolate in time: State varibales are extrapolated to the next time level using the leap-frop time stepping*/

  //Set the timesteps number    
  int timesteps = 10;
  vector<int> hhh;

  //Open the file to save the data of the last timestep  
  //ofstream Myfile("LINADVfin.txt");

  //Create the loop
  /*for(int j = 1; j <= timesteps ; j++){
    
    //Update hold = h; h = hnew;
    vector<int> hold = h;
    h = hnew;
    
    for(int i = 1; i < 98 ; i++){
      htend[i] = -ubar*(h[i+1]-h[i-1]/(2*lambdax));
      hnew[i-1] = hold[i-1] + 2*lambdat*htend[i-1];
      /* if(j == 10){
        int b = hold[i-1] + 2*lambdat*htend[i-1];
	hhh.push_back(b);
        string data3 = to_string(i);
	string data4 = to_string(b);
	Myfile << data3 + " " + data4 + "\n";
	}*/
      //Myfile.close();
      //  }
//}
/*cout << h[48] << endl;
  cout << htend[48] << endl;
  cout << hhh[48] << endl;
  cout << hnew[48] << endl;*/
  ofstream Myfile("LINADV_data.txt");
  for(int i = 0; i< 99 ; i++){
    string a = to_string(hinit[i]);
    string b = to_string(htend[i]);
    string c = to_string(i+1);
    Myfile << c + " " + a + " " + b + "\n";
  }
  Myfile.close();
    
}
